-- ReplicatedStorage > VoxelDestruction

local VoxelDestruction = {}

local VOXEL_SIZE = 2
local DEBRIS_LIFETIME = 4
local MAX_VOXELS = 300

function VoxelDestruction:BreakPart(part)
	if not part or not part:IsA("BasePart") or part:GetAttribute("Destroyed") then return end

	part:SetAttribute("Destroyed", true)

	local size = part.Size
	local cframe = part.CFrame
	local color = part.Color
	local material = part.Material

	local count = 0

	for x = -size.X/2, size.X/2, VOXEL_SIZE do
		for y = -size.Y/2, size.Y/2, VOXEL_SIZE do
			for z = -size.Z/2, size.Z/2, VOXEL_SIZE do
				if count >= MAX_VOXELS then break end
				count += 1

				local offset = Vector3.new(x, y, z)
				local worldPos = (cframe * CFrame.new(offset)).Position

				local voxel = Instance.new("Part")
				voxel.Size = Vector3.new(VOXEL_SIZE, VOXEL_SIZE, VOXEL_SIZE)
				voxel.Position = worldPos
				voxel.Color = color
				voxel.Material = material
				voxel.Anchored = false
				voxel.CanCollide = true
				voxel.TopSurface = Enum.SurfaceType.Smooth
				voxel.BottomSurface = Enum.SurfaceType.Smooth
				voxel.CFrame *= CFrame.Angles(
					math.rad(math.random(0,360)),
					math.rad(math.random(0,360)),
					math.rad(math.random(0,360))
				)

				local velocity = Instance.new("BodyVelocity")
				velocity.Velocity = Vector3.new(
					math.random(-50, 50),
					math.random(20, 100),
					math.random(-50, 50)
				)
				velocity.MaxForce = Vector3.new(1e5, 1e5, 1e5)
				velocity.P = 1250
				velocity.Parent = voxel

				voxel.Parent = workspace
				game:GetService("Debris"):AddItem(voxel, DEBRIS_LIFETIME)
			end
		end
	end

	local explosion = Instance.new("Explosion")
	explosion.Position = cframe.Position
	explosion.BlastRadius = 0
	explosion.BlastPressure = 0
	explosion.Parent = workspace

	part:Destroy()
end

return VoxelDestruction